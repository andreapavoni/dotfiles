#!/bin/sh
# http://iamvery.com/2013/11/16/tmux-pairing-anywhere-on-your-box.html

command=$(basename $0)
ngrok_host=${NGROK_HOST:-ngrok.com}
tmux_user=${TMUX_USER:-$USER}

# Make sure dependencies are installed
if [ ! $(command -v gh-auth) ]; then
  gem install github-auth
fi
if [ ! $(command -v tmux) ]; then
  echo "This script depends on tmux. Try: brew install tmux"
  exit 1
fi
if [ ! $(command -v ngrok) ]; then
  echo "You must install https://ngrok.com to use this script."
  exit 1
fi

help(){
  echo "Usage: $command <subcommand> [options]\n"
  echo "Subcommands:"
  echo "    add  Add a github user"
  echo "    rm   Remove a github user"
  echo "    ls   List github users"
  echo "    up   Open shared tmux session"
  echo "    ssh  Start a reverse tunnel for pair sharing"
  echo "         See: https://ngrok.com"
}

add(){
  gh-auth add --users $@ --command="$(which tmux) attach -t pairing"
}

rm(){
  gh-auth remove --users $@
}

ls(){
  gh-auth list
}

up(){
  # Add any users, if specified
  if [[ ! -z $@ ]]; then
    add $@
  fi

  tmux new-session -d -s pairing "ngrok --proto=tcp 22"
  tmux split-window
  sleep 3 # some delay so tunnel has time to get up
  tmux send-keys "pair ssh" C-m
  tmux attach
}

ssh(){
  clipboard_helper="reattach-to-user-namespace"
  ssh_command=$(ngrok_ssh)
  echo $ssh_command

  if [ $(command -v $clipboard_helper) ]; then
    echo $ssh_command | $clipboard_helper pbcopy
  else
    echo "You must have $clipboard_helper installed to copy ssh command automatically. Try: brew install $clipboard_command"
  fi
}

ngrok_ssh(){
  port=$(ngrok_tunnel_port)

  if [ ! -z $port ]; then
    ssh_command="ssh -p $port $tmux_user@$ngrok_host"
    echo $ssh_command
  else
    echo "Tunnel with TCP forwarding doesn't seem to be connected."
  fi
}

ngrok_tunnel_port(){
  tunnel_info_endpoint="http://localhost:4040/http/in"
  search_string="tcp://$ngrok_host"
  port_strip_regex="s/^.*$ngrok_host:\([0-9]*\).*$/\1/"

  curl -s $tunnel_info_endpoint | grep $search_string | sed $port_strip_regex
}

subcommand=$1
case $subcommand in
  '' | '-h' | '--help')
    help ;;
  *)
    shift
    ${subcommand} $@
    ;;
esac
